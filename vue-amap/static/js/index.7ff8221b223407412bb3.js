!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("VueAMap",[],e):"object"==typeof exports?exports.VueAMap=e():t.VueAMap=e()}(window,function(){var s={1:function(t,e,n){"use strict";var o=n(4),i=n.n(o),r=n(6),p=n(5);e.a={inject:{parentInstance:{default:null}},props:{visible:{type:Boolean,default:!0},zIndex:{type:Number},extraOptions:{type:Object}},data:function(){return{unwatchFns:[],handlers:{visible:function(t){this.show&&this.hide&&(!1===t?this.hide():this.show())},zIndex:function(t){this.setzIndex&&this.setzIndex(t)}},needInitComponents:[],isDestroy:!1}},mounted:function(){this.parentInstance&&(this.parentInstance.$amapComponent?this.register():this.parentInstance.addChildComponent(this))},beforeDestroy:function(){this.$amapComponent&&(this.unregisterEvents(),this.unwatchFns.forEach(function(t){return t()}),this.unwatchFns=[],this.destroyComponent(),this.$amapComponent=null,this.$parentComponent=null,this.isDestroy=!0)},methods:{addChildComponent:function(t){this.needInitComponents.push(t)},createChildren:function(){for(;0<this.needInitComponents.length;)this.needInitComponents[0].register(),this.needInitComponents.splice(0,1)},getHandlerFun:function(t){return this.handlers&&this.handlers[t]?this.handlers[t]:this.$amapComponent["set"+i()(t)]},convertProps:function(){var i=this,r={},t=this.$options.propsData,p=void 0===t?{}:t,a=this.propsRedirect;return this.extraOptions&&Object.assign(r,this.extraOptions),Object.keys(p).reduce(function(t,e){var n=e,o=i.convertSignalProp(n,p[n]);return void 0!==o&&(a&&a[e]&&(n=a[n]),r[n]=o),t},r)},convertSignalProp:function(t,e){return this.converters&&this.converters[t]?this.converters[t].call(this,e):(t=r.a[t])?t(e):e},registerEvents:function(){var e=this,n=this.$listeners;Object.keys(n).forEach(function(t){p.a.addListener(e.$amapComponent,t,n[t])})},unregisterEvents:function(){var e=this,n=this.$listeners;Object.keys(n).forEach(function(t){p.a.removeListener(e.$amapComponent,t,n[t])})},setPropWatchers:function(){var o=this,i=this.propsRedirect,t=this.$options.propsData,r=void 0===t?{}:t;Object.keys(r).forEach(function(e){var t=e,n=(i&&i[e]&&(t=i[e]),o.getHandlerFun(t));n&&(t={deep:!1},"[object Object]"===Object.prototype.toString.call(r[e])&&(t.deep=!0),t=o.$watch(e,function(t){n.call(o.$amapComponent,o.convertSignalProp(e,t))},t),o.unwatchFns.push(t))})},initProps:function(){var n=this;["editable","visible","zooms"].forEach(function(t){var e;void 0!==n[t]&&(e=n.getHandlerFun(t))&&e.call(n.$amapComponent,n.convertSignalProp(t,n[t]))})},printReactiveProp:function(){var e=this;Object.keys(this._props).forEach(function(t){e.$amapComponent["set"+i()(t)]&&console.log(t)})},register:function(){var e=this,t=(this.parentInstance&&!this.$parentComponent&&(this.$parentComponent=this.parentInstance.$amapComponent),this.__initComponent&&this.__initComponent(this.convertProps()));t&&t.then?t.then(function(t){return e.registerRest(t)}):this.registerRest(t)},registerRest:function(t){var e=this;!this.$amapComponent&&t&&(this.$amapComponent=t),this.$amapComponent&&(this.registerEvents(),this.initProps(),this.setPropWatchers(),this.$nextTick(function(){e.createChildren()})),this.$listeners.init&&this.$emit("init",this.$amapComponent,this)},$$getInstance:function(){return this.$amapComponent},destroyComponent:function(){this.$amapComponent.setMap&&this.$amapComponent.setMap(null),this.$amapComponent.close&&this.$amapComponent.close(),this.$amapComponent.editor&&this.$amapComponent.editor.close()}}}},24:function(I,t,e){"use strict";e.r(t),e.d(t,"initAMapApiLoader",function(){return r}),e.d(t,"registerMixin",function(){return a.a}),e.d(t,"lazyAMapApiLoaderInstance",function(){return i});var n=e(4),W=e.n(n),n=e(17),P=e.n(n),o=e(26),D={key:"",version:"2.0",plugins:[],AMapUI:{version:"1.1",plugins:[]},Loca:{version:"2.0.0"},serviceHost:"",securityJsCode:""},T=e(16),i=null,r=function(t){T.a.prototype.$isServer||i||(i=i||(t.offline?new Promise(function(t){console.log("@vuemap/vue-amap离线部署"),t(window.AMap)}):function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};return(t=Object(o.a)({},D,t)).serviceHost?window._AMapSecurityConfig={serviceHost:t.serviceHost}:t.securityJsCode&&(window._AMapSecurityConfig={securityJsCode:t.securityJsCode}),P.a.load(t)}(t))).then()};function p(){for(var t=[],e="0123456789abcdef",n=0;n<36;n++)t[n]=e.substr(Math.floor(16*Math.random()),1);return t[14]="4",t[19]=e.substr(3&t[19]|8,1),t[8]=t[13]=t[18]=t[23]="-",t.join("")}var a=e(1),n={name:"el-amap",mixins:[a.a],provide:function(){return{parentInstance:this}},inject:null,props:{vid:{type:String},center:{type:Array},zoom:{type:Number},rotation:{type:Number},pitch:{type:Number},viewMode:{type:String},features:{type:Array},layers:{type:Array},zooms:{type:Array},resizeEnable:{type:Boolean,default:!0},dragEnable:{type:Boolean},zoomEnable:{type:Boolean},jogEnable:{type:Boolean},pitchEnable:{type:Boolean},rotateEnable:{type:Boolean},animateEnable:{type:Boolean},keyboardEnable:{type:Boolean},doubleClickZoom:{type:Boolean},scrollWheel:{type:Boolean},touchZoom:{type:Boolean},touchZoomCenter:{type:Number},showLabel:{type:Boolean},defaultCursor:{type:String},isHotspot:{type:Boolean},mapStyle:{type:String},wallColor:{type:[String,Array]},roofColor:{type:[String,Array]},showBuildingBlock:{type:Boolean},showIndoorMap:{type:Boolean},skyColor:{type:[String,Array]},labelRejectMask:{type:Boolean},mask:{type:Array},WebGLParams:{type:Object}},beforeCreate:function(){},computed:{},data:function(){return{handlers:{dragEnable:function(t){this.setStatus({dragEnable:t})},zoomEnable:function(t){this.setStatus({zoomEnable:t})},jogEnable:function(t){this.setStatus({jogEnable:t})},keyboardEnable:function(t){this.setStatus({keyboardEnable:t})},doubleClickZoom:function(t){this.setStatus({doubleClickZoom:t})},scrollWheel:function(t){this.setStatus({scrollWheel:t})},rotateEnable:function(t){this.setStatus({rotateEnable:t})},resizeEnable:function(t){this.setStatus({resizeEnable:t})},showIndoorMap:function(t){this.setStatus({showIndoorMap:t})}}}},mounted:function(){this.createMap()},beforeDestroy:function(){this.$amapComponent&&(this.$amapComponent.destroy(),this.$amapComponent=null)},methods:{createMap:function(){var n=this;i.then(function(){var t=n.$el.querySelector(".el-vue-amap"),e=n.vid||p();t.id=e,n.$amapComponent=new AMap.Map(e,n.convertProps()),n.register()}).catch(function(t){console.warn("init map error: ",t)})}}},s=e(2),n=Object(s.a)(n,function(){var t=this._self._c;return t("div",{staticClass:"el-vue-amap-container"},[t("div",{staticClass:"el-vue-amap"}),this._v(" "),this._t("default")],2)},[],!1,null,null,null).exports,l={name:"el-amap-layer-default",mixins:[a.a],props:{zoom:{type:Array},opacity:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=AMap.createDefaultLayer(t),this.$parentComponent.add(this.$amapComponent)}}},l=Object(s.a)(l,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,u={name:"el-amap-layer-tile",mixins:[a.a],props:{tileUrl:{type:String,required:!0},zoom:{type:Array},dataZooms:{type:Array},opacity:{type:Number},tileSize:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.TileLayer(t),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},u=Object(s.a)(u,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,m={name:"el-amap-layer-traffic",mixins:[a.a],props:{autoRefresh:{type:Boolean},interval:{type:Number},zooms:{type:Array},opacity:{type:Number},tileSize:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.TileLayer.Traffic(t),this.$parentComponent.add(this.$amapComponent)},stopFresh:function(){this.$amapComponent&&this.$amapComponent.stopFresh()},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},m=Object(s.a)(m,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,c={name:"el-amap-layer-satellite",mixins:[a.a],props:{zooms:{type:Array},opacity:{type:Number},tileSize:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.TileLayer.Satellite(t),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$amapComponent.destroy(),this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},c=Object(s.a)(c,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,h={name:"el-amap-layer-road-net",mixins:[a.a],props:{zooms:{type:Array},opacity:{type:Number},tileSize:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.TileLayer.RoadNet(t),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$amapComponent.destroy(),this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},h=Object(s.a)(h,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,d={name:"el-amap-layer-buildings",mixins:[a.a],props:{wallColor:{type:[String,Array]},roofColor:{type:[String,Array]},heightFactor:{type:Number},styleOpts:{type:Object},zooms:{type:Array},opacity:{type:Number}},data:function(){return{handlers:{styleOpts:function(t){this.setStyle(t)}}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.Buildings(t),this.$parentComponent.add(this.$amapComponent),this.styleOpts&&this.$amapComponent.setStyle(this.styleOpts)},destroyComponent:function(){this.$amapComponent.destroy(),this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},d=Object(s.a)(d,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,y={name:"el-amap-layer-district",mixins:[a.a],props:{type:{type:String,default:"Country",validator:function(t){return-1!==["World","Country","Province"].indexOf(t)}},adcode:{type:String},SOC:{type:String},depth:{type:Number},zooms:{type:Array},opacity:{type:Number},styles:{type:Object}},data:function(){return{handlers:{SOC:function(t){this.setSOC(t)}}}},methods:{__initComponent:function(t){"World"===this.type?this.$amapComponent=new AMap.DistrictLayer.World(t):"Country"===this.type?this.$amapComponent=new AMap.DistrictLayer.Country(t):"Province"===this.type&&(this.$amapComponent=new AMap.DistrictLayer.Province(t)),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},y=Object(s.a)(y,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports;function f(t){return t&&("AMap.Map"===t.className||"AMap.Map"===t.CLASS_NAME)}function C(t){return t&&("Overlay.OverlayGroup"===t.className||"Overlay.OverlayGroup"===t.CLASS_NAME)}function $(t){return t&&("AMap.VectorLayer"===t.CLASS_NAME||"AMap.VectorLayer"===t.CLASS_NAME)}var v={name:"el-amap-layer-indoor-map",mixins:[a.a],props:{opacity:{type:Number},cursor:{type:String},hideFloorBar:{type:Boolean}},data:function(){return{handlers:{hideFloorBar:function(t){!1===t?this.hideFloorBar():this.showFloorBar()}}}},methods:{__initComponent:function(n){var o=this;return new Promise(function(e){AMap.plugin(["AMap.IndoorMap"],function(){o.$amapComponent=new AMap.IndoorMap(n);var t=o.$parentComponent.getLayers();t.push(o.$amapComponent),o.$parentComponent.setLayers(t),e()})})},destroyComponent:function(){for(var t,e=this.$parentComponent.getLayers(),n=-1,o=0;o<e.length;o++)if((t=e[o])&&("AMap.IndoorMap"===t.className||"AMap.IndoorMap"===t.CLASS_NAME)){n=o;break}-1<n&&(e.splice(n,1),this.$parentComponent.setLayers(e)),this.$amapComponent=null,this.$parentComponent=null}}},v=Object(s.a)(v,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,b={name:"el-amap-layer-wms",mixins:[a.a],props:{url:{type:String},blend:{type:Boolean},params:{type:Object},zooms:{type:Array},opacity:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.TileLayer.WMS(t),this.$parentComponent.addLayer(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.removeLayer(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},b=Object(s.a)(b,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,g={name:"el-amap-layer-wmts",mixins:[a.a],props:{url:{type:String},blend:{type:Boolean},params:{type:Object},zooms:{type:Array},opacity:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.TileLayer.WMTS(t),this.$parentComponent.addLayer(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.removeLayer(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},g=Object(s.a)(g,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,O={name:"el-amap-layer-mapbox-vector-tile",mixins:[a.a],props:{url:{type:String},zooms:{type:Array},dataZooms:{type:Array},opacity:{type:Number},styles:{type:Object}},data:function(){return{}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){AMap.plugin(["AMap.MapboxVectorTileLayer"],function(){n.$amapComponent=new AMap.MapboxVectorTileLayer(e),n.$parentComponent.addLayer(n.$amapComponent),t()})})},destroyComponent:function(){this.$parentComponent.removeLayer(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},O=Object(s.a)(O,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,S={name:"el-amap-layer-heat-map",mixins:[a.a],props:{radius:{type:Number},gradient:{type:Object},zooms:{type:Array},opacity:{type:Array},config:{type:Object},dataSet:{type:Object}},data:function(){return{propsRedirect:{config:"3d"}}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){AMap.plugin(["AMap.HeatMap"],function(){delete e.dataSet,n.$amapComponent=new AMap.HeatMap(n.$parentComponent,e),n.dataSet&&n.$amapComponent.setDataSet(n.dataSet),t()})})},destroyComponent:function(){this.$amapComponent.setMap(null),this.$amapComponent=null,this.$parentComponent=null}}},S=Object(s.a)(S,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,_={name:"el-amap-layer-labels",mixins:[a.a],provide:function(){return{parentInstance:this}},props:{zooms:{type:Array},opacity:{type:Number},collision:{type:Boolean},allowCollision:{type:Boolean}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.LabelsLayer(t),this.$parentComponent.add(this.$amapComponent)},$$add:function(t){this.$amapComponent.add(t)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},_=Object(s.a)(_,function(){return(0,this._self._c)("div",[this._t("default")],2)},[],!1,null,null,null).exports,A={name:"el-amap-layer-custom",mixins:[a.a],props:{canvas:{required:!0},render:{type:Function},zooms:{type:Array},opacity:{type:Number},alwaysRender:{type:Boolean}},data:function(){return{}},methods:{__initComponent:function(t){var e=t.canvas;delete t.canvas,this.$amapComponent=new AMap.CustomLayer(e,t),this.$amapComponent.setMap(this.$parentComponent)},destroyComponent:function(){this.$amapComponent.setMap(null),this.$amapComponent=null,this.$parentComponent=null}}},A=Object(s.a)(A,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,x={name:"el-amap-layer-flexible",mixins:[a.a],props:{cacheSize:{type:Number},createTile:{type:Function},zooms:{type:Array},opacity:{type:Array},tileSize:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.TileLayer.Flexible(t),this.$amapComponent.setMap(this.$parentComponent)},destroyComponent:function(){this.$amapComponent.destroy(),this.$amapComponent.setMap(null),this.$amapComponent=null,this.$parentComponent=null}}},x=Object(s.a)(x,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,M={name:"el-amap-layer-image",mixins:[a.a],props:{url:{type:String,required:!0},zoom:{type:Array},bounds:{type:[Array,Object]},opacity:{type:Number}},data:function(){return{handlers:{url:function(t){this.setImageUrl(t)}}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.ImageLayer(t),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},M=Object(s.a)(M,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,w={name:"el-amap-layer-canvas",mixins:[a.a],props:{canvas:{required:!0},zoom:{type:Array},bounds:{type:[Array,Object]},opacity:{type:Number}},data:function(){return{handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.CanvasLayer(t),this.$parentComponent.addLayer(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.removeLayer(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},w=Object(s.a)(w,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,k={name:"el-amap-layer-gl-custom",mixins:[a.a],props:{init:{type:Function},render:{type:Function},zooms:{type:Array},opacity:{type:Number}},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.GLCustomLayer(t),this.$amapComponent.setMap(this.$parentComponent)},destroyComponent:function(){this.$amapComponent.setMap(null),this.$amapComponent=null,this.$parentComponent=null}}},k=Object(s.a)(k,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,j={name:"el-amap-layer-vector",mixins:[a.a],provide:function(){return{parentInstance:this}},props:{},data:function(){return{}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.VectorLayer(t),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},j=Object(s.a)(j,function(){return(0,this._self._c)("div",[this._t("default")],2)},[],!1,null,null,null).exports,B={name:"el-amap-marker",mixins:[a.a],props:{position:{type:[Array,Object],required:!0},icon:{type:[String,Object]},content:{type:[String,HTMLElement]},title:{type:String},offset:{type:[Array,Object]},anchor:{type:[String,Array]},angle:{type:Number},clickable:{type:Boolean},draggable:{type:Boolean},bubble:{type:Boolean},zooms:{type:Array},cursor:{type:String},topWhenClick:{type:Boolean},label:{type:Object},extData:null},data:function(){return{withSlot:!1,converters:{},handlers:{}}},created:function(){},methods:{__initComponent:function(t){this.$slots.default&&this.$slots.default.length&&(this.withSlot=!0,t.content=this.getSlotContent()),this.$amapComponent=new AMap.Marker(t),f(this.$parentComponent)?this.$parentComponent.add(this.$amapComponent):C(this.$parentComponent)&&this.$parentComponent.addOverlay(this.$amapComponent)},getSlotContent:function(){return this.$refs.content},destroyComponent:function(){f(this.$parentComponent)?this.$parentComponent.remove(this.$amapComponent):C(this.$parentComponent)&&this.$parentComponent.removeOverlay(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},B=Object(s.a)(B,function(){var t=this._self._c;return t("div",{staticStyle:{display:"none"}},[t("div",{ref:"content"},[this._t("default")],2)])},[],!1,null,null,null).exports,L={name:"el-amap-label-marker",mixins:[a.a],props:{name:{type:String},position:{type:[Array,Object],required:!0},zooms:{type:Array},opacity:{type:Number},rank:{type:Number},icon:{type:Object},text:{type:Object},extData:null},data:function(){return{converters:{},handlers:{}}},created:function(){},methods:{__initComponent:function(t){this.$amapComponent=new AMap.LabelMarker(t),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}},render:function(){}},L=Object(s.a)(L,void 0,void 0,!1,null,null,null).exports,F={name:"el-amap-text",mixins:[a.a],props:{position:{type:[Array,Object],required:!0},text:{type:String},title:{type:String},offset:{type:[Array,Object]},anchor:{type:[String,Array]},angle:{type:Number},clickable:{type:Boolean},draggable:{type:Boolean},bubble:{type:Boolean},zooms:{type:Array},cursor:{type:String},topWhenClick:{type:Boolean},textStyle:{type:Object},extData:null},data:function(){return{propsRedirect:{textStyle:"style"},converters:{},handlers:{}}},created:function(){},methods:{__initComponent:function(t){this.$amapComponent=new AMap.Text(t),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}},render:function(){return null}},F=Object(s.a)(F,void 0,void 0,!1,null,null,null).exports,q={name:"el-amap-elastic-marker",mixins:[a.a],props:{position:{type:[Array,Object],required:!0},title:{type:String},offset:{type:[Array,Object]},clickable:{type:Boolean},draggable:{type:Boolean},bubble:{type:Boolean},zooms:{type:Array},cursor:{type:String},topWhenClick:{type:Boolean},zoomStyleMapping:{type:Object},styles:{type:Array},extData:null},data:function(){return{converters:{},handlers:{}}},created:function(){},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){AMap.plugin(["AMap.ElasticMarker"],function(){n.$amapComponent=new AMap.ElasticMarker(e),n.$parentComponent.add(n.$amapComponent),t()})})},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}},render:function(){return null}},q=Object(s.a)(q,void 0,void 0,!1,null,null,null).exports,R={name:"el-amap-marker-cluster",mixins:[a.a],props:{points:{type:Array,required:!0},gridSize:{type:Number},maxZoom:{type:Number},averageCenter:{type:Boolean},clusterByZoomChange:{type:Boolean},styles:{type:Array},renderClusterMarker:{type:Function},renderMarker:{type:Function}},data:function(){return{converters:{},handlers:{points:function(t){this&&this.setData(t)}}}},created:function(){},methods:{__initComponent:function(n){var o=this;return new Promise(function(e){AMap.plugin(["AMap.MarkerCluster"],function(){var t=n.points;delete n.points,o.$amapComponent=new AMap.MarkerCluster(o.$parentComponent,t,n),e()})})},destroyComponent:function(){this.$amapComponent.setMap(null),this.$amapComponent=null,this.$parentComponent=null}},render:function(){return null}},R=Object(s.a)(R,void 0,void 0,!1,null,null,null).exports,V={name:"el-amap-mass-marks",mixins:[a.a],props:{data:{type:Array,required:!0},zooms:{type:Array},cursor:{type:String},styles:{type:[Array,Object]}},data:function(){return{propsRedirect:{styles:"style"},converters:{},handlers:{}}},created:function(){},methods:{__initComponent:function(t){var e=t.data;delete t.data,this.$amapComponent=new AMap.MassMarks(e,t),this.$amapComponent.setMap(this.$parentComponent)},destroyComponent:function(){this.$amapComponent.clear(),this.$amapComponent.setMap(null),this.$amapComponent=null,this.$parentComponent=null}},render:function(){return null}},V=Object(s.a)(V,void 0,void 0,!1,null,null,null).exports,H={name:"el-amap-circle-marker",mixins:[a.a],props:{zIndex:{type:Number},visible:{type:Boolean,default:!0},center:{type:Array,required:!0},bubble:{type:Boolean},cursor:{type:String},radius:{type:Number},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},fillColor:{type:String},fillOpacity:{type:Number},draggable:{type:Boolean,default:!1},extData:{type:Object}},data:function(){return{converters:{},handlers:{strokeColor:function(t){this.setOptions({strokeColor:t})},strokeOpacity:function(t){this.setOptions({strokeOpacity:t})},strokeWeight:function(t){this.setOptions({strokeWeight:t})},fillColor:function(t){this.setOptions({fillColor:t})},fillOpacity:function(t){this.setOptions({fillOpacity:t})}}}},methods:{__initComponent:function(t){this.$parentComponent=this.parentInstance.$amapComponent,this.$amapComponent=new AMap.CircleMarker(t),this.$parentComponent.add(this.$amapComponent)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null}},render:function(){return null}},H=Object(s.a)(H,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,J={name:"el-amap-info-window",mixins:[a.a],props:{isCustom:{type:Boolean},autoMove:{type:Boolean},avoid:{type:Array},closeWhenClickMap:{type:Boolean},content:{},size:{type:Array},anchor:{type:String},offset:{type:Array},position:{type:Array}},data:function(){var n=this;return{withSlots:!1,converters:{},handlers:{visible:function(t){var e=this.getPosition();e&&(!1===t?this.close():this.open(n.$parentComponent,[e.lng,e.lat]))},position:function(t){n.visible?this.open(n.$parentComponent,t):this.setPosition(t)}}}},methods:{__initComponent:function(t){var e=this;this.$slots.default&&this.$slots.default.length&&(t.content=this.getSlotContent()),this.$amapComponent=new AMap.InfoWindow(t),this.$amapComponent.on("close",function(){e.$emit("update:visible",!1)}),!1!==this.visible&&this.$amapComponent.open(this.$parentComponent,this.position)},getSlotContent:function(){return this.$refs.info},destroyComponent:function(){this.$amapComponent&&(this.$amapComponent.getIsOpen()&&this.$amapComponent.close(),this.$amapComponent=null,this.$parentComponent=null)}}},J=Object(s.a)(J,function(){var t=this._self._c;return t("div",{staticStyle:{display:"none"}},[t("div",{ref:"info"},[this._t("default")],2)])},[],!1,null,null,null).exports,G=e(5),E={props:{editable:{type:Boolean,default:void 0},editOptions:{type:Object}},data:function(){return{}},methods:{setEditorEvents:function(){var e,n,o=this;this.$amapComponent.editor&&(e=["addnode","adjust","removenode","end","move","add"],n={},Object.keys(this.$listeners).forEach(function(t){-1!==e.indexOf(t)&&(n[t]=o.$listeners[t])}),Object.keys(n).forEach(function(t){G.a.addListener(o.$amapComponent.editor,t,n[t])}))}}},Z={name:"el-amap-polygon",mixins:[a.a,E],props:{path:{type:Array,required:!0},bubble:{type:Boolean},cursor:{type:String},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},fillColor:{type:String},fillOpacity:{type:Number},draggable:{type:Boolean},extData:null,strokeStyle:{type:String,validator:function(t){return-1!==["solid","dashed"].indexOf(t)}},strokeDasharray:{type:Array}},data:function(){var n=this;return{converters:{},handlers:{zIndex:function(t){this.setOptions({zIndex:t})},strokeColor:function(t){this.setOptions({strokeColor:t})},strokeOpacity:function(t){this.setOptions({strokeOpacity:t})},strokeWeight:function(t){this.setOptions({strokeWeight:t})},fillColor:function(t){this.setOptions({fillColor:t})},fillOpacity:function(t){this.setOptions({fillOpacity:t})},strokeStyle:function(t){this.setOptions({strokeStyle:t})},strokeDasharray:function(t){this.setOptions({strokeDasharray:t})},editable:function(t){var e=this;n.createEditor().then(function(){!0===t?e.editor.open():e.editor.close()})}}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.Polygon(t),f(this.$parentComponent)?this.$parentComponent.add(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.addOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.add(this.$amapComponent)},createEditor:function(){var e=this;return new Promise(function(t){e.$amapComponent.editor?t():AMap.plugin(["AMap.PolygonEditor"],function(){e.$amapComponent.editor=new AMap.PolygonEditor(e.$parentComponent,e.$amapComponent,e.editOptions),e.setEditorEvents(),t()})})},destroyComponent:function(){this.$amapComponent.editor&&this.$amapComponent.editor.close(),this.$amapComponent.destroy(),f(this.$parentComponent)?this.$parentComponent.remove(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.removeOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},Z=Object(s.a)(Z,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,U={name:"el-amap-polyline",mixins:[a.a,E],props:{path:{type:Array,required:!0},bubble:{type:Boolean},cursor:{type:String},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},borderWeight:{type:Number},isOutline:{type:Boolean},outlineColor:{type:String},draggable:{type:Boolean},extData:null,strokeStyle:{type:String,validator:function(t){return-1!==["solid","dashed"].indexOf(t)}},strokeDasharray:{type:Array},lineJoin:{type:String,validator:function(t){return-1!==["miter","round","bevel"].indexOf(t)}},lineCap:{type:String,validator:function(t){return-1!==["butt","round","square"].indexOf(t)}},geodesic:{type:Boolean},showDir:{type:Boolean}},data:function(){var n=this;return{converters:{},handlers:{zIndex:function(t){this.setOptions({zIndex:t})},strokeColor:function(t){this.setOptions({strokeColor:t})},strokeOpacity:function(t){this.setOptions({strokeOpacity:t})},strokeWeight:function(t){this.setOptions({strokeWeight:t})},borderWeight:function(t){this.setOptions({borderWeight:t})},isOutline:function(t){this.setOptions({isOutline:t})},outlineColor:function(t){this.setOptions({outlineColor:t})},strokeStyle:function(t){this.setOptions({strokeStyle:t})},strokeDasharray:function(t){this.setOptions({strokeDasharray:t})},lineJoin:function(t){this.setOptions({lineJoin:t})},lineCap:function(t){this.setOptions({lineCap:t})},geodesic:function(t){this.setOptions({geodesic:t})},showDir:function(t){this.setOptions({showDir:t})},editable:function(t){var e=this;n.createEditor().then(function(){!0===t?e.editor.open():e.editor.close()})}}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.Polyline(t),f(this.$parentComponent)?this.$parentComponent.add(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.addOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.add(this.$amapComponent)},createEditor:function(){var e=this;return new Promise(function(t){e.$amapComponent.editor?t():AMap.plugin(["AMap.PolylineEditor"],function(){e.$amapComponent.editor=new AMap.PolylineEditor(e.$parentComponent,e.$amapComponent,e.editOptions),e.setEditorEvents(),t()})})},destroyComponent:function(){this.$amapComponent.editor&&this.$amapComponent.editor.close(),this.$amapComponent.destroy(),f(this.$parentComponent)?this.$parentComponent.remove(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.removeOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},U=Object(s.a)(U,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,K={name:"el-amap-bezier-curve",mixins:[a.a,E],props:{path:{type:Array,required:!0},bubble:{type:Boolean},cursor:{type:String},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},borderWeight:{type:Number},isOutline:{type:Boolean},outlineColor:{type:String},draggable:{type:Boolean},extData:null,strokeStyle:{type:String,validator:function(t){return-1!==["solid","dashed"].indexOf(t)}},strokeDasharray:{type:Array},lineJoin:{type:String,validator:function(t){return-1!==["miter","round","bevel"].indexOf(t)}},lineCap:{type:String,validator:function(t){return-1!==["butt","round","square"].indexOf(t)}},geodesic:{type:Boolean},showDir:{type:Boolean}},data:function(){var n=this;return{converters:{},handlers:{zIndex:function(t){this.setOptions({zIndex:t})},strokeColor:function(t){this.setOptions({strokeColor:t})},strokeOpacity:function(t){this.setOptions({strokeOpacity:t})},strokeWeight:function(t){this.setOptions({strokeWeight:t})},borderWeight:function(t){this.setOptions({borderWeight:t})},isOutline:function(t){this.setOptions({isOutline:t})},outlineColor:function(t){this.setOptions({outlineColor:t})},strokeStyle:function(t){this.setOptions({strokeStyle:t})},strokeDasharray:function(t){this.setOptions({strokeDasharray:t})},lineJoin:function(t){this.setOptions({lineJoin:t})},lineCap:function(t){this.setOptions({lineCap:t})},geodesic:function(t){this.setOptions({geodesic:t})},showDir:function(t){this.setOptions({showDir:t})},editable:function(t){var e=this;n.createEditor().then(function(){!0===t?e.editor.open():e.editor.close()})}}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.BezierCurve(t),f(this.$parentComponent)?this.$parentComponent.add(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.addOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.add(this.$amapComponent)},createEditor:function(){var e=this;return new Promise(function(t){e.$amapComponent.editor?t():AMap.plugin(["AMap.BezierCurveEditor"],function(){e.$amapComponent.editor=new AMap.BezierCurveEditor(e.$parentComponent,e.$amapComponent,e.editOptions),e.setEditorEvents(),t()})})},destroyComponent:function(){this.$amapComponent.editor&&this.$amapComponent.editor.close(),this.$amapComponent.destroy(),f(this.$parentComponent)?this.$parentComponent.remove(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.removeOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},K=Object(s.a)(K,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,Q={name:"el-amap-circle",mixins:[a.a,E],props:{center:{type:Array,required:!0},radius:{type:Number,required:!0},bubble:{type:Boolean},cursor:{type:String},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},fillColor:{type:String},fillOpacity:{type:Number},draggable:{type:Boolean},extData:null,strokeStyle:{type:String,validator:function(t){return-1!==["solid","dashed"].indexOf(t)}},strokeDasharray:{type:Array}},data:function(){var n=this;return{converters:{},handlers:{zIndex:function(t){this.setOptions({zIndex:t})},strokeColor:function(t){this.setOptions({strokeColor:t})},strokeOpacity:function(t){this.setOptions({strokeOpacity:t})},strokeWeight:function(t){this.setOptions({strokeWeight:t})},fillColor:function(t){this.setOptions({fillColor:t})},fillOpacity:function(t){this.setOptions({fillOpacity:t})},strokeStyle:function(t){this.setOptions({strokeStyle:t})},strokeDasharray:function(t){this.setOptions({strokeDasharray:t})},editable:function(t){var e=this;n.createEditor().then(function(){!0===t?e.editor.open():e.editor.close()})}}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.Circle(t),f(this.$parentComponent)?this.$parentComponent.add(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.addOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.add(this.$amapComponent)},createEditor:function(){var e=this;return new Promise(function(t){e.$amapComponent.editor?t():AMap.plugin(["AMap.CircleEditor"],function(){e.$amapComponent.editor=new AMap.CircleEditor(e.$parentComponent,e.$amapComponent,e.editOptions),e.setEditorEvents(),t()})})},destroyComponent:function(){this.$amapComponent.editor&&this.$amapComponent.editor.close(),this.$amapComponent.destroy(),f(this.$parentComponent)?this.$parentComponent.remove(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.removeOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},Q=Object(s.a)(Q,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,X={name:"el-amap-ellipse",mixins:[a.a,E],props:{center:{type:Array,required:!0},radius:{type:Array,required:!0},bubble:{type:Boolean},cursor:{type:String},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},fillColor:{type:String},fillOpacity:{type:Number},draggable:{type:Boolean},extData:null,strokeStyle:{type:String,validator:function(t){return-1!==["solid","dashed"].indexOf(t)}},strokeDasharray:{type:Array}},data:function(){var n=this;return{converters:{},handlers:{zIndex:function(t){this.setOptions({zIndex:t})},strokeColor:function(t){this.setOptions({strokeColor:t})},strokeOpacity:function(t){this.setOptions({strokeOpacity:t})},strokeWeight:function(t){this.setOptions({strokeWeight:t})},fillColor:function(t){this.setOptions({fillColor:t})},fillOpacity:function(t){this.setOptions({fillOpacity:t})},strokeStyle:function(t){this.setOptions({strokeStyle:t})},strokeDasharray:function(t){this.setOptions({strokeDasharray:t})},editable:function(t){var e=this;n.createEditor().then(function(){!0===t?e.editor.open():e.editor.close()})}}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.Ellipse(t),f(this.$parentComponent)?this.$parentComponent.add(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.addOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.add(this.$amapComponent)},createEditor:function(){var e=this;return new Promise(function(t){e.$amapComponent.editor?t():AMap.plugin(["AMap.EllipseEditor"],function(){e.$amapComponent.editor=new AMap.EllipseEditor(e.$parentComponent,e.$amapComponent,e.editOptions),e.setEditorEvents(),t()})})},destroyComponent:function(){this.$amapComponent.editor&&this.$amapComponent.editor.close(),this.$amapComponent.destroy(),f(this.$parentComponent)?this.$parentComponent.remove(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.removeOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},X=Object(s.a)(X,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,Y=e(6),e={name:"el-amap-rectangle",mixins:[a.a,E],props:{bounds:{type:Array,required:!0},bubble:{type:Boolean},cursor:{type:String},strokeColor:{type:String},strokeOpacity:{type:Number},strokeWeight:{type:Number},fillColor:{type:String},fillOpacity:{type:Number},draggable:{type:Boolean},extData:null,strokeStyle:{type:String,validator:function(t){return-1!==["solid","dashed"].indexOf(t)}},strokeDasharray:{type:Array}},data:function(){var n=this;return{converters:{bounds:function(t){return new AMap.Bounds(Object(Y.b)(t[0]),Object(Y.b)(t[1]))}},handlers:{zIndex:function(t){this.setOptions({zIndex:t})},strokeColor:function(t){this.setOptions({strokeColor:t})},strokeOpacity:function(t){this.setOptions({strokeOpacity:t})},strokeWeight:function(t){this.setOptions({strokeWeight:t})},fillColor:function(t){this.setOptions({fillColor:t})},fillOpacity:function(t){this.setOptions({fillOpacity:t})},strokeStyle:function(t){this.setOptions({strokeStyle:t})},strokeDasharray:function(t){this.setOptions({strokeDasharray:t})},editable:function(t){var e=this;n.createEditor().then(function(){!0===t?e.editor.open():e.editor.close()})}}}},methods:{__initComponent:function(t){this.$amapComponent=new AMap.Rectangle(t),f(this.$parentComponent)?this.$parentComponent.add(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.addOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.add(this.$amapComponent)},createEditor:function(){var e=this;return new Promise(function(t){e.$amapComponent.editor?t():AMap.plugin(["AMap.RectangleEditor"],function(){e.$amapComponent.editor=new AMap.RectangleEditor(e.$parentComponent,e.$amapComponent,e.editOptions),e.setEditorEvents(),t()})})},destroyComponent:function(){this.$amapComponent.editor&&this.$amapComponent.editor.close(),this.$amapComponent.destroy(),f(this.$parentComponent)?this.$parentComponent.remove(this.$amapComponent):C(this.$parentComponent)?this.$parentComponent.removeOverlay(this.$amapComponent):$(this.$parentComponent)&&this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},E=Object(s.a)(e,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,e={name:"el-amap-geojson",mixins:[a.a],props:{geo:{type:Object,required:!0},markerOptions:{type:Object},getMarker:{type:Function},polylineOptions:{type:Object},getPolyline:{type:Function},polygonOptions:{type:Object},getPolygon:{type:Function}},data:function(){return{propsRedirect:{geo:"geoJSON"},converters:{},handlers:{geo:function(t){this.importData(t)}}}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){AMap.plugin(["AMap.GeoJSON"],function(){e.getMarker||(e.getMarker=n.createMarker),e.getPolyline||(e.getPolyline=n.createPolyline),e.getPolygon||(e.getPolygon=n.createPolygon),n.$amapComponent=new AMap.GeoJSON(e),n.$parentComponent.add(n.$amapComponent),t()})})},createMarker:function(t,e){var n=this.markerOptions||{};return(n=Object(o.a)({},n,t.properties)).position=e,new AMap.Marker(n)},createPolyline:function(t,e){var n=this.polylineOptions||{};return(n=Object(o.a)({},n,t.properties)).path=e,new AMap.Polyline(n)},createPolygon:function(t,e){var n=this.polygonOptions||{};return(n=Object(o.a)({},n,t.properties)).path=e,new AMap.Polygon(n)},destroyComponent:function(){this.$parentComponent.remove(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}}},e=Object(s.a)(e,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,tt={name:"el-amap-control-scale",mixins:[a.a],props:{position:{type:[String,Object]},offset:{type:Array}},data:function(){return{}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){n.$parentComponent.plugin(["AMap.Scale"],function(){n.$amapComponent=new AMap.Scale(e),n.$parentComponent.addControl(n.$amapComponent),t()})})},destroyComponent:function(){this.$amapComponent&&this.$parentComponent&&(this.$parentComponent.removeControl(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null)}}},tt=Object(s.a)(tt,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,et={name:"el-amap-control-tool-bar",mixins:[a.a],props:{position:{type:[String,Object]},offset:{type:Array}},data:function(){return{}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){n.$parentComponent.plugin(["AMap.ToolBar"],function(){n.$amapComponent=new AMap.ToolBar(e),n.$parentComponent.addControl(n.$amapComponent),t()})})},destroyComponent:function(){this.$amapComponent&&this.$parentComponent&&(this.$parentComponent.removeControl(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null)}}},et=Object(s.a)(et,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,nt={name:"el-amap-control-control-bar",mixins:[a.a],props:{position:{type:[String,Object]},offset:{type:Array},showControlButton:{type:Boolean}},data:function(){return{}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){n.$parentComponent.plugin(["AMap.ControlBar"],function(){n.$amapComponent=new AMap.ControlBar(e),n.$parentComponent.addControl(n.$amapComponent),t()})})},destroyComponent:function(){this.$amapComponent&&this.$parentComponent&&(this.$parentComponent.removeControl(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null)}},render:function(){return null}},nt=Object(s.a)(nt,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,ot={name:"el-amap-control-map-type",mixins:[a.a],props:{defaultType:{type:Number},showTraffic:{type:Boolean},showRoad:{type:Boolean}},data:function(){return{}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){n.$parentComponent.plugin(["AMap.MapType"],function(){n.$amapComponent=new AMap.MapType(e),n.$parentComponent.addControl(n.$amapComponent),t()})})},destroyComponent:function(){this.$amapComponent&&this.$parentComponent&&(this.$parentComponent.removeControl(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null)}}},ot=Object(s.a)(ot,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,it={name:"el-amap-control-hawk-eye",mixins:[a.a],props:{autoMove:{type:Boolean},showRectangle:{type:Boolean},showButton:{type:Boolean},isOpen:{type:Boolean},mapStyle:{type:String},layers:{type:Array},width:{type:String},height:{type:String},offset:{type:Array},borderStyle:{type:String},borderColor:{type:String},borderRadius:{type:String},borderWidth:{type:String},buttonSize:{type:String}},data:function(){return{converters:{isOpen:function(t){!1===t?this.close():this.open()}}}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){n.$parentComponent.plugin(["AMap.HawkEye"],function(){n.$amapComponent=new AMap.HawkEye(e),n.$parentComponent.addControl(n.$amapComponent),t()})})},destroyComponent:function(){this.$amapComponent&&this.$parentComponent&&(this.$parentComponent.removeControl(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null)}}},it=Object(s.a)(it,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,rt={name:"el-amap-search-box",mixins:[a.a],props:{type:{type:String},city:{type:String},datatype:{type:String},citylimit:{type:Boolean},inputId:{type:String},outputId:{type:String},outPutDirAuto:{type:Boolean},closeResultOnScroll:{type:Boolean},lang:{type:String},inputCustom:{type:Boolean,default:!1},placeholder:{type:String},debounce:{type:Number,default:100}},data:function(){var e=this;return{saveInputId:"",handlers:{citylimit:function(t){this.setCityLimit(t)},visible:function(t){e.visible=t}}}},created:function(){this.saveInputId=p()},mounted:function(){},methods:{__initComponent:function(n){var o=this;return n.inputId&&(this.saveInputId=n.inputId,delete n.inputId),n.input=this.saveInputId,n.outputId&&(n.output=n.outputId,delete n.outputId),new Promise(function(t){o.$parentComponent.plugin(["AMap.AutoComplete"],function(){var e=o.debounce;AMap.Autocomplete.prototype.onInPut=function(){var t=this;clearTimeout(this._inputTimer),this._inputTimer=setTimeout(function(){t.output&&t.autoSearch()},e)},o.$amapComponent=new AMap.AutoComplete(n),t()})})}}},rt=Object(s.a)(rt,function(){var t=this,e=t._self._c;return e("div",{directives:[{name:"show",rawName:"v-show",value:t.visible&&!t.inputCustom,expression:"visible && !inputCustom"}],staticClass:"el-vue-search-box-container"},[t.inputCustom?t._e():e("input",{attrs:{id:t.saveInputId,type:"text",placeholder:t.placeholder}})])},[],!1,null,null,null).exports,pt={name:"ElAmapControlGeolocation",mixins:[a.a],props:{position:{type:String},offset:{type:Array},borderColor:{type:String},borderRadius:{type:String},buttonSize:{type:String},convert:{type:Boolean,default:!0},enableHighAccuracy:{type:Boolean,default:!1},timeout:{type:Number},maximumAge:{type:Number},showButton:{type:Boolean,default:!0},showCircle:{type:Boolean,default:!0},showMarker:{type:Boolean,default:!0},markerOptions:{type:Object},circleOptions:{type:Object},panToLocation:{type:Boolean,default:!0},zoomToAccuracy:{type:Boolean,default:!0},GeoLocationFirst:{type:Boolean,default:!0},noIpLocate:{type:Number},noGeoLocation:{type:Number},useNative:{type:Boolean,default:!1},getCityWhenFail:{type:Boolean,default:!1},needAddress:{type:Boolean,default:!1},extensions:{type:String,validator:function(t){return-1!==["base","all"].indexOf(t)}}},emits:["complete"],data:function(){return{}},methods:{__initComponent:function(e){var n=this;return new Promise(function(t){n.$parentComponent.plugin(["AMap.Geolocation"],function(){n.$amapComponent=new AMap.Geolocation(e),n.$parentComponent.addControl(n.$amapComponent),n.$amapComponent.on("complete",function(t){n.$emit("complete",t)}),t()})})},destroyComponent:function(){this.$amapComponent&&this.$parentComponent&&(this.$parentComponent.removeControl(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null)}},render:function(){return null}},pt=Object(s.a)(pt,void 0,void 0,!1,null,null,null).exports,at={name:"el-amap-loca",mixins:[a.a],provide:function(){return{parentInstance:this}},props:{ambLight:{type:Object},dirLight:{type:Object},pointLight:{type:Object}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.Container({map:this.$parentComponent}),t.ambLight&&(this.$amapComponent.ambLight=t.ambLight),t.dirLight&&(this.$amapComponent.dirLight=t.dirLight),t.pointLight&&(this.$amapComponent.pointLight=t.pointLight),this.createChildren()},destroyComponent:function(){this.$amapComponent.destroy()},getMap:function(){return this.$parentComponent}}},at=Object(s.a)(at,function(){return(0,this._self._c)("div",[this._t("default")],2)},[],!1,null,null,null).exports,N={props:{sourceUrl:{type:String},sourceData:{type:Object},geoBufferSource:{type:[ArrayBuffer,String],default:function(){return null}},layerStyle:{type:Object},defaultStyleValue:{type:Object,default:function(){return{}}},zooms:{type:Array},opacity:{type:Number},initEvents:{type:Boolean,default:!0},visibleDuration:{type:Number,default:0}},data:function(){var e=this;return{isDragging:!1,isRotating:!1,handlers:{layerStyle:function(t){e.$nextTick(function(){e.setStyle&&e.setStyle(t)})},sourceUrl:function(){e.$nextTick(function(){e.setSource()})},sourceData:function(){e.$nextTick(function(){e.setSource()})},visible:function(t){this.show&&this.hide&&(!1===t?this.hide(e.visibleDuration):this.show(e.visibleDuration))}}}},methods:{setSource:function(){this.source&&(this.source.destroy(),this.source=null),this.geoBufferSource?"string"==typeof this.geoBufferSource?this.source=new Loca.GeoBufferSource({url:this.geoBufferSource}):this.source=new Loca.GeoBufferSource({data:this.geoBufferSource}):this.sourceUrl?this.source=new Loca.GeoJSONSource({url:this.sourceUrl}):this.sourceData?this.source=new Loca.GeoJSONSource({data:this.sourceData}):this.source=new Loca.GeoJSONSource({}),this.$amapComponent.setSource(this.source)},initComplete:function(){this.initEvents&&this.bindEvents()},destroyComponent:function(){this.$amapComponent&&(this.unBindEvents(),this.parentInstance.isDestroy||(this.$parentComponent.remove(this.$amapComponent),this.$amapComponent.destroy()),this.source&&(this.source.destroy(),this.source=null),this.$amapComponent=null,this.$parentComponent=null)},bindEvents:function(){var t,e=this.parentInstance.getMap();e&&((t=this.$listeners).click&&e.on("click",this.clickMap),t.mousemove)&&(e.on("mousemove",this.mouseMoveMap),e.on("dragstart",this.dragStart),e.on("dragend",this.dragEnd),e.on("rotatestart",this.rotateStart),e.on("rotateend",this.rotateEnd),e.on("mouseout",this.mouseoutMap))},clickMap:function(t){var e=this.$amapComponent.queryFeature(t.pixel.toArray());this.$emit("click",e,t)},mouseMoveMap:function(t){var e=this.$amapComponent.queryFeature(t.pixel.toArray());this.$emit("mousemove",e,t)},dragStart:function(){this.isDragging=!0},dragEnd:function(){this.isDragging=!1},mouseoutMap:function(){this.isDragging=!1,this.isRotating=!1},rotateStart:function(){this.isRotating=!0},rotateEnd:function(){this.isRotating=!1},unBindEvents:function(){var t=this.parentInstance.getMap();t&&(t.off("click",this.clickMap),t.off("mousemove",this.mouseMoveMap),t.off("dragstart",this.dragStart),t.off("dragend",this.dragEnd),t.off("rotatestart",this.rotateStart),t.off("rotateend",this.rotateEnd),t.off("mouseout",this.mouseoutMap))}}},st={name:"el-amap-loca-point",mixins:[a.a,N],props:{blend:{type:String}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.PointLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{radius:20,color:"#fff",unit:"px",borderWidth:10,borderColor:"#fff",blurWidth:-1},this.defaultStyleValue),t={radius:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.radius?n:e.properties).radius},color:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.color?n:e.properties).color},unit:n.unit,borderWidth:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.borderWidth?n:e.properties).borderWidth},borderColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.borderColor?n:e.properties).borderColor},blurWidth:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.blurWidth?n:e.properties).blurWidth}},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},st=Object(s.a)(st,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,lt={name:"el-amap-loca-icon",mixins:[a.a,N],props:{},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.IconLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{unit:"px",icon:"",iconSize:[20,20],rotation:0,opacity:1,offset:[0,0]},this.defaultStyleValue),t={unit:n.unit,icon:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.icon?n:e.properties).icon},iconSize:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.iconSize?n:e.properties).iconSize},rotation:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.rotation?n:e.properties).rotation},opacity:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.opacity?n:e.properties).opacity},offset:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.offset?n:e.properties).offset}},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},lt=Object(s.a)(lt,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,ut={name:"el-amap-loca-prism",mixins:[a.a,N],props:{cullface:{type:String},acceptLight:{type:Boolean},shininess:{type:Number},hasSide:{type:Boolean},depth:{type:Boolean}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.PrismLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{radius:20,unit:"px",sideNumber:3,rotation:0,altitude:0,height:100,topColor:"#fff",sideTopColor:"#fff",sideBottomColor:"#fff"},this.defaultStyleValue),t={radius:n.radius,unit:n.unit,sideNumber:n.sideNumber,rotation:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.rotation?n:e.properties).rotation},altitude:n.altitude,height:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.height?n:e.properties).height},topColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.topColor?n:e.properties).topColor},sideTopColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.sideTopColor?n:e.properties).sideTopColor},sideBottomColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.sideBottomColor?n:e.properties).sideBottomColor}},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},ut=Object(s.a)(ut,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,mt={name:"el-amap-loca-line",mixins:[a.a,N],props:{},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.LineLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{color:"#fff",lineWidth:2,altitude:0,borderWidth:0,borderColor:"#fff",dashArray:[10,0,10,0]},this.defaultStyleValue),t=Object.assign({},{color:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.color?n:e.properties).color},lineWidth:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.lineWidth?n:e.properties).lineWidth},altitude:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.altitude?n:e.properties).altitude},borderWidth:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.borderWidth?n:e.properties).borderWidth},borderColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.borderColor?n:e.properties).borderColor},dashArray:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.dashArray?n:e.properties).dashArray}},this.layerStyle);this.$amapComponent.setStyle(t)}}},mt=Object(s.a)(mt,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,ct={name:"el-amap-loca-polygon",mixins:[a.a,N],props:{cullface:{type:String},acceptLight:{type:Boolean},shininess:{type:Number},hasSide:{type:Boolean},hasBottom:{type:Boolean,default:!1},blockHide:{type:Boolean,default:!0},depth:{type:Boolean},labelsLayerOptions:{type:Object}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.PolygonLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{topColor:"#fff",sideTopColor:"#fff",sideBottomColor:"#fff",bottomColor:"#fff",altitude:0,height:0,texture:null,textureSize:[20,3],label:void 0,labelAltitude:0},this.defaultStyleValue),t={topColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.topColor?n:e.properties).topColor},sideTopColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.sideTopColor?n:e.properties).sideTopColor},sideBottomColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.sideBottomColor?n:e.properties).sideBottomColor},bottomColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.bottomColor?n:e.properties).bottomColor},altitude:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.altitude?n:e.properties).altitude},height:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.height?n:e.properties).height},texture:n.texture,textureSize:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.textureSize?n:e.properties).textureSize},label:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.label?n:e.properties).label},labelAltitude:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.labelAltitude?n:e.properties).labelAltitude}},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},ct=Object(s.a)(ct,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,ht={name:"el-amap-loca-link",mixins:[a.a,N],props:{},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.LinkLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{lineColors:["rgba(255,255,255,1)","rgba(255,255,255,0)"],height:100,smoothSteps:100},this.defaultStyleValue),t=Object.assign({},{lineColors:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.lineColors?n:e.properties).lineColors},height:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.height?n:e.properties).height},smoothSteps:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.smoothSteps?n:e.properties).smoothSteps}},this.layerStyle);this.$amapComponent.setStyle(t)}}},ht=Object(s.a)(ht,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,dt={name:"el-amap-loca-heatmap",mixins:[a.a,N],props:{depth:{type:Boolean}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.HeatMapLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{radius:20,value:10,gradient:{.5:"blue",.65:"rgb(117,211,248)",.7:"rgb(0, 255, 0)",.9:"#ffea00",1:"red"},opacity:[0,1],height:100,heightBezier:[.4,.2,.4,.8],max:null,min:null,unit:"px",difference:!1},this.defaultStyleValue),t={radius:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.radius?n:e.properties).radius},value:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.value?n:e.properties).value},gradient:n.gradient,opacity:n.opacity,height:n.height,heightBezier:n.heightBezier,max:n.max,min:n.min,unit:n.unit,difference:n.difference},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},dt=Object(s.a)(dt,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,yt={name:"el-amap-loca-hexagon",mixins:[a.a,N],props:{cullface:{type:String},acceptLight:{type:Boolean},shininess:{type:Number},hasSide:{type:Boolean},depth:{type:Boolean}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.HexagonLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{topColor:"#fff",sideTopColor:"#fff",sideBottomColor:"#fff",altitude:0,height:0,radius:1e3,gap:0,unit:"meter"},this.defaultStyleValue),t={topColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.topColor?n:e.properties).topColor},sideTopColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.sideTopColor?n:e.properties).sideTopColor},sideBottomColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.sideBottomColor?n:e.properties).sideBottomColor},altitude:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.altitude?n:e.properties).altitude},height:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.height?n:e.properties).height},radius:n.radius,gap:n.gap,unit:n.unit},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},yt=Object(s.a)(yt,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,ft={name:"el-amap-loca-grid",mixins:[a.a,N],props:{cullface:{type:String},acceptLight:{type:Boolean},shininess:{type:Number},hasSide:{type:Boolean},depth:{type:Boolean}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.GridLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{topColor:"#fff",sideTopColor:"#fff",sideBottomColor:"#fff",altitude:0,height:0,radius:1e3,gap:0,unit:"meter"},this.defaultStyleValue),t={topColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.topColor?n:e.properties).topColor},sideTopColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.sideTopColor?n:e.properties).sideTopColor},sideBottomColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.sideBottomColor?n:e.properties).sideBottomColor},altitude:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.altitude?n:e.properties).altitude},height:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.height?n:e.properties).height},radius:n.radius,gap:n.gap,unit:n.unit},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},ft=Object(s.a)(ft,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,Ct={name:"el-amap-loca-scatter",mixins:[a.a,N],props:{},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.ScatterLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{size:[20,20],rotation:0,color:"rgba(200,200,200,1)",altitude:0,borderWidth:0,borderColor:"rgba(250,250,250,1)",texture:null,unit:"px",animate:!1,duration:0},this.defaultStyleValue),t={size:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.size?n:e.properties).size},rotation:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.rotation?n:e.properties).rotation},color:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.color?n:e.properties).color},altitude:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.altitude?n:e.properties).altitude},borderWidth:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.borderWidth?n:e.properties).borderWidth},borderColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.borderColor?n:e.properties).borderColor},texture:n.texture,unit:n.unit,animate:n.animate,duration:n.duration},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},Ct=Object(s.a)(Ct,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,$t={name:"el-amap-loca-pulse-line",mixins:[a.a,N],props:{depth:{type:Boolean}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.PulseLineLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{lineWidth:1,headColor:"rgba(0, 0, 0, 0.75)",trailColor:"rgba(0, 0, 0, 0.25)",altitude:0,interval:1,duration:2e3},this.defaultStyleValue),t={lineWidth:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.lineWidth?n:e.properties).lineWidth},headColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.headColor?n:e.properties).headColor},trailColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.trailColor?n:e.properties).trailColor},altitude:n.altitude,interval:n.interval,duration:n.duration},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},$t=Object(s.a)($t,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,vt={name:"el-amap-loca-pulse-link",mixins:[a.a,N],props:{depth:{type:Boolean}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.PulseLinkLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{lineColors:["#fff"],height:100,maxHeightScale:0,smoothSteps:50,lineWidth:[1,1],unit:"px",dash:[4e3,0,4e3,0],speed:100,headColor:"rgba(0, 0, 0, 0.75)",trailColor:"rgba(0, 0, 0, 0.25)",flowLength:100},this.defaultStyleValue),t={lineColors:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.lineColors?n:e.properties).lineColors},height:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.height?n:e.properties).height},maxHeightScale:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.maxHeightScale?n:e.properties).maxHeightScale},smoothSteps:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.smoothSteps?n:e.properties).smoothSteps},lineWidth:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.lineWidth?n:e.properties).lineWidth},unit:n.unit,dash:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.dash?n:e.properties).dash},speed:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.speed?n:e.properties).speed},headColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.headColor?n:e.properties).headColor},trailColor:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.trailColor?n:e.properties).trailColor},flowLength:n.flowLength},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},vt=Object(s.a)(vt,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,bt={name:"el-amap-loca-z-marker",mixins:[a.a,N],props:{},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.ZMarkerLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{unit:"px",content:"",size:[20,20],rotation:0,alwaysFront:!1,altitude:0},this.defaultStyleValue),t={unit:n.unit,content:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.content?n:e.properties).content},size:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.size?n:e.properties).size},rotation:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.rotation?n:e.properties).rotation},alwaysFront:n.alwaysFront,altitude:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.altitude?n:e.properties).altitude}},t=Object.assign({},t,this.layerStyle);this.$amapComponent.setStyle(t)}}},bt=Object(s.a)(bt,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports,gt={name:"ElAmapLocaAmbientLight",mixins:[a.a],props:{color:{type:String},intensity:{type:Number}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.AmbientLight(t),this.$parentComponent.addLight(this.$amapComponent)},destroyComponent:function(){this.parentInstance.isDestroy||this.$parentComponent.removeLight(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}},render:function(){return null}},gt=Object(s.a)(gt,void 0,void 0,!1,null,null,null).exports,Ot={name:"ElAmapLocaDirectionalLight",mixins:[a.a],props:{color:{type:String},intensity:{type:Number},position:{type:Array,required:!0},target:{type:Array}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.DirectionalLight(t),this.$parentComponent.addLight(this.$amapComponent)},destroyComponent:function(){this.parentInstance.isDestroy||this.$parentComponent.removeLight(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}},render:function(){return null}},Ot=Object(s.a)(Ot,void 0,void 0,!1,null,null,null).exports,St={name:"ElAmapLocaPointLight",mixins:[a.a],props:{color:{type:String},intensity:{type:Number},position:{type:Array,required:!0},distance:{type:Number}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.PointLight(t),this.$parentComponent.addLight(this.$amapComponent)},destroyComponent:function(){this.parentInstance.isDestroy||this.$parentComponent.removeLight(this.$amapComponent),this.$amapComponent=null,this.$parentComponent=null}},render:function(){return null}},St=Object(s.a)(St,void 0,void 0,!1,null,null,null).exports,N={name:"el-amap-loca-laser",mixins:[a.a,N],props:{depth:{type:Boolean,default:!0}},data:function(){return{converters:{},handlers:{}}},methods:{__initComponent:function(t){this.$amapComponent=new Loca.LaserLayer(t),this.setSource(),this.setStyle(),this.$parentComponent.add(this.$amapComponent),this.initComplete()},setStyle:function(){var n=Object.assign({},{unit:"px",height:200,color:"rgba(255,255,0,0.5)",lineWidth:2,angle:0,trailLength:30,fadeOpacity:.2,duration:2e3,interval:0,delay:0,repeat:1/0},this.defaultStyleValue),t=Object.assign({},{unit:"px",height:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.height?n:e.properties).height},color:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.color?n:e.properties).color},angle:0,lineWidth:2,trailLength:30,fadeOpacity:.2,duration:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.duration?n:e.properties).duration},interval:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.interval?n:e.properties).interval},delay:function(t,e){return e.properties=e.properties||{},(void 0===e.properties.delay?n:e.properties).delay},repeat:1/0},this.layerStyle);this.$amapComponent.setStyle(t)}}},_t=[n,l,u,m,c,h,d,y,v,b,g,O,S,_,A,x,M,w,k,j,B,L,F,q,R,V,H,J,Z,U,K,Q,X,E,e,tt,et,nt,ot,it,rt,pt,at,st,lt,ut,mt,ct,ht,dt,yt,ft,Ct,$t,vt,bt,gt,Ot,St,Object(s.a)(N,function(){return(0,this._self._c)("div")},[],!1,null,null,null).exports],z={initAMapApiLoader:r,lazyAMapApiLoaderInstance:i,install:function(e){z.installed||(e.config.optionMergeStrategies.deferredReady=e.config.optionMergeStrategies.created,_t.map(function(t){e.component(t.name,t),z[W()(t.name).replace(/^El/,"")]=t}))}};"undefined"!=typeof window&&window.Vue&&function t(e){t.installed||z.install(e)}(window.Vue),t.default=z},5:function(t,e,n){"use strict";var o;function i(){if(!(this instanceof i))throw new TypeError("Cannot call a class as a function");this._listener=new Map}i.prototype.addListener=function(t,e,n,o){if(!AMap)throw new Error("please wait for Map API load");t.on&&(t.on(e,n,o),this._listener.get(t)||this._listener.set(t,{}),(o=this._listener.get(t))[e]||(o[e]=[]),o[e].push(n))},i.prototype.removeListener=function(e,t,n){if(!AMap)throw new Error("please wait for Map API load");var o;e.off&&this._listener.get(e)&&this._listener.get(e)[t]&&(o=this._listener.get(e)[t],n?(n=o.indexOf(n),e.off(o[n]),o.splice(n,1)):(o.forEach(function(t){e.off(t)}),this._listener.get(e)[t]=[]))},i.prototype.addListenerOnce=function(t,e,n,o){return t.on(e,n,o,!0)},i.prototype.trigger=function(t,e,n){return t.emit(e,n)},i.prototype.clearListeners=function(e){var t=this._listener.get(e);t&&Object.keys(t).map(function(t){e.clearEvents(t)})},o=new i,e.a=o},6:function(t,e,n){"use strict";function o(t){return new AMap.LngLat(t[0],t[1])}n.d(e,"b",function(){return o}),n.d(e,"a",function(){return i});var i={}}};function t(t){for(var e,n,o=t[0],i=t[1],r=t[2],p=0,a=[];p<o.length;p++)n=o[p],Object.prototype.hasOwnProperty.call(u,n)&&u[n]&&a.push(u[n][0]),u[n]=0;for(e in i)Object.prototype.hasOwnProperty.call(i,e)&&(s[e]=i[e]);for(c&&c(t);a.length;)a.shift()();return m.push.apply(m,r||[]),l()}function l(){for(var t,e=0;e<m.length;e++){for(var n=m[e],o=!0,i=1;i<n.length;i++){var r=n[i];0!==u[r]&&(o=!1)}o&&(m.splice(e--,1),t=p(p.s=n[0]))}return t}var n={},u={1:0},m=[];function p(t){var e;return(n[t]||(e=n[t]={i:t,l:!1,exports:{}},s[t].call(e.exports,e,e.exports,p),e.l=!0,e)).exports}p.m=s,p.c=n,p.d=function(t,e,n){p.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},p.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},p.t=function(e,t){if(1&t&&(e=p(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(p.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)p.d(n,o,function(t){return e[t]}.bind(null,o));return n},p.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return p.d(e,"a",e),e},p.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},p.p="./";var e=(o=window.webpackJsonpVueAMap=window.webpackJsonpVueAMap||[]).push.bind(o);o.push=t;for(var o=o.slice(),i=0;i<o.length;i++)t(o[i]);var c=e;return m.push([24,0]),l()});